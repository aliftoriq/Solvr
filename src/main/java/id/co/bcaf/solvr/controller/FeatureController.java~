package id.co.bcaf.solvr.controller;

import id.co.bcaf.solvr.dto.ResponseHttpDTO;
import id.co.bcaf.solvr.dto.ResponseTemplate;
import id.co.bcaf.solvr.dto.UserHttp;
import id.co.bcaf.solvr.model.account.Feature;
import id.co.bcaf.solvr.model.account.RoleToFeature;
import id.co.bcaf.solvr.services.FeatureService;
import id.co.bcaf.solvr.utils.JwtUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.*;

import javax.swing.text.html.parser.Entity;
import java.util.List;
import java.util.stream.Collectors;

@RestController
@RequestMapping("/api/v1/feature")
public class FeatureController {
    private static final Logger logger = LoggerFactory.getLogger(UserController.class);

    private final PasswordEncoder passwordEncoder = new BCryptPasswordEncoder();

    private final JwtUtil jwtUtil;
    private final FeatureService featureService;


    public FeatureController(JwtUtil jwtUtil, FeatureService featureService) {
        this.featureService = featureService;
        this.jwtUtil = jwtUtil;
    }

    @GetMapping
    public ResponseEntity<?> getFeature() {

        List<Feature> features = featureService.getFeature();

        List<String> featureNames = features.stream()
                .map(feature -> feature.getName())
                .collect(Collectors.toList());

        return ResponseEntity.ok(new ResponseTemplate(200, "Success", new ResponseHttpDTO.FeatureResponse(featureNames)));
    }

    @PostMapping
    public ResponseEntity<?> createFeature(@RequestBody Feature feature) {
        return ResponseEntity.ok(featureService.createFeature(feature));
    }

    @GetMapping("/role-to-feature")
    public ResponseEntity<?> getAllRoleToFeature() {
        return ResponseEntity.ok(featureService.getAllRoleToFeature());
    }

    @PostMapping("/role-to-feature")
    public ResponseEntity<?> createRoleToFeature(@RequestBody RoleToFeature roleToFeature) {
        return ResponseEntity.ok(featureService.createRoleToFeature(roleToFeature));
    }
}
